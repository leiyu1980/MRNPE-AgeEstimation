name: "LocalNet"  
layer {
  name: "data1"
  type: "Data"
  top: "data1"
  top: "label1"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
  }
  data_param {
    source: "/data4/szhou/224dataset/s1_lmdb/Face_lmdb"
    batch_size: 16
    backend: LMDB
  }
}
layer {
  name: "data1"
  type: "Data"
  top: "data1"
  top: "label1"
  include {
    phase: TEST
  }
  transform_param {
    mirror: false
  }
  data_param {
    source: "/data4/szhou/224dataset/10000val/Face_lmdb"
    batch_size: 10
    backend: LMDB
  }
}

layer {
  bottom: "data1"
  top: "conv1_1_1"
  name: "conv1_1_1"
  type: "Convolution"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv1_1_1"
  top: "conv1_1_1"
  name: "relu1_1_1"
  type: "ReLU"
}
layer {
  bottom: "conv1_1_1"
  top: "conv1_2_1"
  name: "conv1_2_1"
  type: "Convolution"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv1_2_1"
  top: "conv1_2_1"
  name: "relu1_2_1"
  type: "ReLU"
}
layer {
  bottom: "conv1_2_1"
  top: "pool1_1"
  name: "pool1_1"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool1_1"
  top: "conv2_1_1"
  name: "conv2_1_1"
  type: "Convolution"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv2_1_1"
  top: "conv2_1_1"
  name: "relu2_1_1"
  type: "ReLU"
}
layer {
  bottom: "conv2_1_1"
  top: "conv2_2_1"
  name: "conv2_2_1"
  type: "Convolution"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv2_2_1"
  top: "conv2_2_1"
  name: "relu2_2_1"
  type: "ReLU"
}
layer {
  bottom: "conv2_2_1"
  top: "pool2_1"
  name: "pool2_1"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool2_1"
  top: "conv3_1_1"
  name: "conv3_1_1"
  type: "Convolution"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_1_1"
  top: "conv3_1_1"
  name: "relu3_1_1"
  type: "ReLU"
}
layer {
  bottom: "conv3_1_1"
  top: "conv3_2_1"
  name: "conv3_2_1"
  type: "Convolution"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_2_1"
  top: "conv3_2_1"
  name: "relu3_2_1"
  type: "ReLU"
}
layer {
  bottom: "conv3_2_1"
  top: "conv3_3_1"
  name: "conv3_3_1"
  type: "Convolution"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_3_1"
  top: "conv3_3_1"
  name: "relu3_3_1"
  type: "ReLU"
}
layer {
  bottom: "conv3_3_1"
  top: "pool3_1"
  name: "pool3_1"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool3_1"
  top: "conv4_1_1"
  name: "conv4_1_1"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4_1_1"
  top: "conv4_1_1"
  name: "relu4_1_1"
  type: "ReLU"
}
layer {
  bottom: "conv4_1_1"
  top: "conv4_2_1"
  name: "conv4_2_1"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4_2_1"
  top: "conv4_2_1"
  name: "relu4_2_1"
  type: "ReLU"
}
layer {
  bottom: "conv4_2_1"
  top: "conv4_3_1"
  name: "conv4_3_1"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4_3_1"
  top: "conv4_3_1"
  name: "relu4_3_1"
  type: "ReLU"
}
layer {
  bottom: "conv4_3_1"
  top: "pool4_1"
  name: "pool4_1"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool4_1"
  top: "conv5_1_1"
  name: "conv5_1_1"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv5_1_1"
  top: "conv5_1_1"
  name: "relu5_1_1"
  type: "ReLU"
}
layer {
  bottom: "conv5_1_1"
  top: "conv5_2_1"
  name: "conv5_2_1"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv5_2_1"
  top: "conv5_2_1"
  name: "relu5_2_1"
  type: "ReLU"
}
layer {
  bottom: "conv5_2_1"
  top: "conv5_3_1"
  name: "conv5_3_1"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv5_3_1"
  top: "conv5_3_1"
  name: "relu5_3_1"
  type: "ReLU"
}
layer {
  bottom: "conv5_3_1"
  top: "pool5_1"
  name: "pool5_1"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "data2"
  type: "Data"
  top: "data2"
  top: "label2"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
  }
  data_param {
    source: "/data4/szhou/224dataset/s1_lmdb/Nose_lmdb"
    batch_size: 16
    backend: LMDB
  }
}
layer {
  name: "data2"
  type: "Data"
  top: "data2"
  top: "label2"
  include {
    phase: TEST
  }
  transform_param {
    mirror: false
  }
  data_param {
    source: "/data4/szhou/224dataset/10000val/Nose_lmdb"
    batch_size: 10
    backend: LMDB
  }
}

layer {
  bottom: "data2"
  top: "conv1_1_2"
  name: "conv1_1_2"
  type: "Convolution"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv1_1_2"
  top: "conv1_1_2"
  name: "relu1_1_2"
  type: "ReLU"
}
layer {
  bottom: "conv1_1_2"
  top: "conv1_2_2"
  name: "conv1_2_2"
  type: "Convolution"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv1_2_2"
  top: "conv1_2_2"
  name: "relu1_2_2"
  type: "ReLU"
}
layer {
  bottom: "conv1_2_2"
  top: "pool1_2"
  name: "pool1_2"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool1_2"
  top: "conv2_1_2"
  name: "conv2_1_2"
  type: "Convolution"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv2_1_2"
  top: "conv2_1_2"
  name: "relu2_1_2"
  type: "ReLU"
}
layer {
  bottom: "conv2_1_2"
  top: "conv2_2_2"
  name: "conv2_2_2"
  type: "Convolution"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv2_2_2"
  top: "conv2_2_2"
  name: "relu2_2_2"
  type: "ReLU"
}
layer {
  bottom: "conv2_2_2"
  top: "pool2_2"
  name: "pool2_2"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool2_2"
  top: "conv3_1_2"
  name: "conv3_1_2"
  type: "Convolution"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_1_2"
  top: "conv3_1_2"
  name: "relu3_1_2"
  type: "ReLU"
}
layer {
  bottom: "conv3_1_2"
  top: "conv3_2_2"
  name: "conv3_2_2"
  type: "Convolution"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_2_2"
  top: "conv3_2_2"
  name: "relu3_2_2"
  type: "ReLU"
}
layer {
  bottom: "conv3_2_2"
  top: "conv3_3_2"
  name: "conv3_3_2"
  type: "Convolution"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_3_2"
  top: "conv3_3_2"
  name: "relu3_3_2"
  type: "ReLU"
}
layer {
  bottom: "conv3_3_2"
  top: "pool3_2"
  name: "pool3_2"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool3_2"
  top: "conv4_1_2"
  name: "conv4_1_2"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4_1_2"
  top: "conv4_1_2"
  name: "relu4_1_2"
  type: "ReLU"
}
layer {
  bottom: "conv4_1_2"
  top: "conv4_2_2"
  name: "conv4_2_2"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4_2_2"
  top: "conv4_2_2"
  name: "relu4_2_2"
  type: "ReLU"
}
layer {
  bottom: "conv4_2_2"
  top: "conv4_3_2"
  name: "conv4_3_2"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4_3_2"
  top: "conv4_3_2"
  name: "relu4_3_2"
  type: "ReLU"
}
layer {
  bottom: "conv4_3_2"
  top: "pool4_2"
  name: "pool4_2"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool4_2"
  top: "conv5_1_2"
  name: "conv5_1_2"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv5_1_2"
  top: "conv5_1_2"
  name: "relu5_1_2"
  type: "ReLU"
}
layer {
  bottom: "conv5_1_2"
  top: "conv5_2_2"
  name: "conv5_2_2"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv5_2_2"
  top: "conv5_2_2"
  name: "relu5_2_2"
  type: "ReLU"
}
layer {
  bottom: "conv5_2_2"
  top: "conv5_3_2"
  name: "conv5_3_2"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv5_3_2"
  top: "conv5_3_2"
  name: "relu5_3_2"
  type: "ReLU"
}
layer {
  bottom: "conv5_3_2"
  top: "pool5_2"
  name: "pool5_2"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}


layer {  
  name: "concat" 
  type: "Concat"   
  bottom: "pool5_1"  
  bottom: "pool5_2"  
  top: "concat"  
  concat_param {    
    concat_dim: 1
  }
}

layer {
  bottom: "concat"
  top: "fc6"
  name: "fc6"
  type: "InnerProduct"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  bottom: "fc6"
  top: "fc6"
  name: "relu6"
  type: "ReLU"
}
layer {
  bottom: "fc6"
  top: "fc6"
  name: "drop6"
  type: "Dropout"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  bottom: "fc6"
  top: "fc7"
  name: "fc7"
  type: "InnerProduct"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  bottom: "fc7"
  top: "fc7"
  name: "relu7"
  type: "ReLU"
}
layer {
  bottom: "fc7"
  top: "fc7"
  name: "drop7"
  type: "Dropout"
  dropout_param {
    dropout_ratio: 0.5
  }
}

layer {
  name: "fc8_age"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8_age"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 101
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {  
  name: "loss"  
  type: "SoftmaxWithLoss"  
  bottom: "fc8_age"  
  bottom: "label1"  
  top: "loss"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc8_age"
  bottom: "label1"
  top: "accuracy"
  include: { phase: TEST }
}

